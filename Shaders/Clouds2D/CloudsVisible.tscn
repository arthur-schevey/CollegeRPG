[gd_scene load_steps=5 format=2]

[ext_resource path="res://Shaders/Clouds2D/Portal_08.png" type="Texture" id=1]

[sub_resource type="Shader" id=8]
code = "shader_type spatial;
render_mode depth_draw_alpha_prepass, unshaded;

uniform sampler2D noiseTexture;
uniform bool isSoft = false;
uniform float speed : hint_range(0.0, 1.0) = 0.1;
uniform float brightness: hint_range(0.0, 2.0) = 0.1;
uniform float threshold : hint_range(0.0, 2.0) = 0.1;
uniform float fluffiness : hint_range(0.0, 2.0) = 0.1;
uniform float opacity : hint_range(0.0, 1.0) = 1;


void fragment() {
	// Mixing two time-shifted textures to create fluffiness
	vec4 noise1 = texture(noiseTexture, mod(UV + TIME * 2.5 * speed / 10.0, 0.0));
	vec4 noise2 = texture(noiseTexture, mod(UV + TIME * (2.5 + fluffiness * 3.0) * speed / 10.0, 0.0));
	vec4 combinedNoise = noise1 + noise2;
	
	if (isSoft == true) {
		// Creating smooth transitions using smoothstep
		combinedNoise.a = combinedNoise.r;
		ALBEDO = smoothstep(threshold - 0.3, threshold + 0.3, combinedNoise).rgb * brightness;
		ALPHA =  smoothstep(threshold - 0.3, threshold + 0.3, combinedNoise).a;
	}
	else {
		// Creating hard transitions
		ALBEDO = combinedNoise.rgb * brightness;
		if (combinedNoise.r < threshold) {
			ALPHA = 0.0;
		}
		else {
			ALPHA = opacity;
		}
	}
}"

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 8 )
shader_param/isSoft = false
shader_param/speed = 0.005
shader_param/brightness = 1.249
shader_param/threshold = 0.363
shader_param/fluffiness = 0.0
shader_param/opacity = 0.622
shader_param/noiseTexture = ExtResource( 1 )

[sub_resource type="QuadMesh" id=10]
material = SubResource( 9 )

[node name="MeshInstance" type="MeshInstance"]
transform = Transform( 20, 0, 0, 0, -8.74228e-07, 1, 0, -20, -4.37114e-08, 0, 1.50744, -0.322522 )
mesh = SubResource( 10 )
material/0 = null
